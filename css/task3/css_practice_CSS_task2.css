* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
body {
  padding: 25px;
}
/* 1. Create a card with rounded corners using border-radius. */
.card {
  width: 300px;
  height: 300px;
  background-color: cadetblue;
  border-color: 1px solid black;
  border-radius: 10px;
  text-align: center;
}

/* 2. Apply a decorative border image to a div using border-image. */
.decimg img {
  object-fit: cover;
  width: 300px;
  height: 300px;
  border-radius: 10px;
}

/* 3. Create a div with a background image that repeats horizontally. */
.repimg {
  background: url(img2.jpg);
  background-size: cover;
  width: 100%;
  height: 50vh;
  background-repeat: repeat;
}
/* 4. Set a section background to a named CSS color and change text color to white */
.sectionbackground {
  background-color: lightblue;
  color: white;
}
/* 5. Use color keywords like 'tomato', 'skyblue' in a button and heading. */
.button1 {
  background-color: tomato;
}
h4 {
  background-color: skyblue;
}
/* 6. Create a background with a linear gradient from red to yellow. */
.gradiantcolor {
  background: linear-gradient(to right, red, yellow);
  width: 500px;
  height: 500px;
}
/* 7. Add a box-shadow to a div and text-shadow to a heading. */
.boxshadow {
  width: 300px;
  height: 300px;
  background-color: lightseagreen;
  box-shadow: 10px 10px 20px rgb(26, 24, 24);
}
/* 8. Add letter spacing, word spacing, and text transform to paragraph text */
.paradec p {
  letter-spacing: 2px;
  word-spacing: 5px;
  text-transform: uppercase;
}
/* 9. Import a Google Font and apply it to all headings on a page. */
.googlefont h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: "Oswald", sans-serif;
  font-weight: 400;
}
/* 10. Rotate a div 45 degrees using transform. */
.divr-otate {
  width: 200px;
  height: 200px;
  background-color: lightcoral;
  transform: rotate(45deg);
}
/* 11. Create a cube-like effect using rotateX and rotateY on a div. */
.cube {
  width: 200px;
  height: 200px;
  background-color: rgb(172, 172, 54);
  transform: rotateX(45deg) rotateY(45deg);
}
/* 12. Animate button background color on hover using transition. */
.button2:hover {
  background-color: lightgreen;
  transition: background-color 0.3s ease;
}
.button2 {
  background-color: lightblue;
  width: 150px;
  height: 100px;
}
/* 13. Create a bouncing box using keyframes and animation. */
.bouncing-box {
  width: 100px;
  height: 100px;
  background-color: orange;
  position: relative;
  animation: bounce 2s infinite;
}
@keyframes bounce {
  0%,
  100% {
    top: ;
  }
  50% {
    top: -50px;
  }
}
/* 14. Create a tooltip that appears on hovering over an icon. */
.tooltip {
  position: relative;
  display: inline-block;
  background-color: lightslategrey;
  padding: 10px;
  border-radius: 5px;
  color: white;
}
.tooltip-dec {
  visibility: hidden;
  width: 120px;
  background-color: black;
  color: #fff;
  text-align: center;
  border-radius: 6px;
  padding: 5px;
  position: absolute;
  z-index: 1;
  bottom: 125%;
  left: 50%;
  transition: opacity 0.3s;
}
.tooltip:hover .tooltip-dec {
  visibility: visible;
  opacity: 1;
}
/* 15. Style an image with a border, padding, and shadow. */
.img-style img {
  width: 300px;
  height: 300px;
  border: 5px solid black;
  padding: 10px;
  box-shadow: 10px 10px 20px rgb(26, 24, 24);
  border-radius: 10px;
}
/* 16. Center an image horizontally and vertically inside a container. */
.container {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
}
.container img {
  width: 300px;
  height: 300px;
  border-radius: 10px;
}
/* 17. Apply grayscale and blur filters to an image. */
.img-filter img {
  width: 300px;
  height: 300px;
  filter: grayscale(100%) blur(2px);
  border-radius: 10px;
}
/* 18. Crop an image to be a circle using border-radius. */
.img-circle img {
  width: 300px;
  height: 300px;
  border-radius: 50%;
  object-fit: cover;
}
/* 19. Display an image to fully cover a div using object-fit: cover. */
.img-fit img {
  object-fit: cover;
  width: 500px;
  height: 300px;
}
/* 20. Move an image focus to top-left using object-position. */
.focus-img {
  width: 500px;
  height: 300px;
  overflow: hidden;
}
.focus-img img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: top left;
}
/* 21. Mask an image with a custom SVG shape using mask-image. */
.img-maks img {
  width: 300px;
  height: 300px;
  mask-image: url("Bon_theme.svg");
  mask-size: cover;
  mask-repeat: no-repeat;
  -webkit-mask-image: url("Bon_theme.svg");
  -webkit-mask-size: cover;
  -webkit-mask-repeat: no-repeat;
}
/* 22. Create a primary button with hover and active states. */
.primary-button {
  background-color: greenyellow;
  color: white;
  padding: 10px 20px;
  border: none;
  border-radius: 5px;
  cursor: pointer;
}

.primary-button:hover {
  background-color: blue;
}

.primary-button:active {
  background-color: brown;
  transform: scale(0.95);
}

/* 23. Design a simple pagination bar with numbered links. */
.pagnation-bar {
  display: flex;
  list-style: none;
  padding: 0;
}

.pagnation-bar li {
  margin: 0 5px;
}
.pagnation-bar a {
  display: block;
  text-decoration: none;
  color: black;
  padding: 5px 10px;
  border: 1px solid black;
  border-radius: 5px;
}
.pagnation-bar a:hover {
  background-color: lightgray;
}

/* 24. Create a multi-column layout for a news article. */
.news-article {
  column-count: 3;
  column-gap: 20px;
  padding: 20px;
  border: 1px solid #ccc;
}

/* 25. Make a resizable div with overflow scroll and pointer cursor. */
.resize-div {
  width: 300px;
  height: 200px;
  overflow: auto;
  resize: both;
  border: 2px solid black;
  cursor: pointer;
}
/* 26. Create a CSS variable for primary color and use it in multiple places. */
:root {
  --primary-color: #3498db;
}
h1 {
  color: var(--primary-color);
}
.button {
  background-color: var(--primary-color);
  color: white;
  padding: 10px 20px;
  border: none;
  border-radius: 5px;
  cursor: pointer;
}
/* 27. Define a custom property using @property and animate its value. */
.ani-box {
  width: 100px;
  height: 100px;
  background-color: coral;
  animation: rotate 5s linear infinite;
}

@keyframes rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
/* 28. Demonstrate the difference between content-box and border-box. */
.content-box {
  width: 200px;
  padding: 20px;
  border: 10px solid black;
  box-sizing: content-box;
  background-color: yellow;
}
.border-box {
  width: 200px;
  padding: 20px;
  border: 10px solid black;
  box-sizing: border-box;
  background-color: green;
}
/* 29. Change the layout of a page for screens smaller than 600px. */
.container2 {
  display: flex;
  gap: 20px;
  background-color: lightgreen;
}
.box {
  flex: 1;
  padding: 20px;
  background-color: lightcoral;
}

@media (max-width: 600px) {
  .container2 {
    flex-direction: column;
  }
}
/* 30. Hide sidebar and stack content vertically on small devices. */
.container3 {
  display: flex;
  background-color: lightgray;
}
.sidebar {
  width: 200px;
  background-color: lightblue;
  padding: 20px;
}
.content {
  flex: 1;
  padding: 20px;
  background-color: lightgreen;
}

@media (max-width: 600px) {
  .container3 {
    flex-direction: column;
  }
  .sidebar {
    display: none;
  }
}
