* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* 1 .Create a table with borders and padding */
table,
th,
td {
  border: 1px solid black;
  border-collapse: collapse;
  padding: 10px;
}
/*2 .Add zebra striping to table rows */
tr:nth-child(even) {
  background-color: #f2f2f2;
}
/* 3 .Make three divs display in one row */
.raw {
  display: flex;
}
.print {
  width: 100px;
  height: 100px;
  margin: 5px;
  background-color: lightblue;
}
/* 4 .Hide an element using display property */
.hide {
  display: none;
}
/* 5 .Make an image responsive with max-width */
.imgpr {
  max-width: 100%;
  height: auto;
}
/* 6 .Position a box at bottom right using absolute */
.container {
  position: relative;
  height: 200px;
  background-color: red;
}
.box {
  position: absolute;
  bottom: 0;
  right: 0;
  background-color: rgb(55, 170, 20);
  padding: 10px;
}
/* 7 .Stick an element at top when scrolling */
.sticky-element {
  position: sticky;
  top: 0;
  background-color: yellow;
  padding: 10px;
  z-index: 999;
}
/* 8 .Create two overlapping divs and bring one to front */
.back-div,
.front-div {
  position: absolute;
  width: 100px;
  height: 100px;
  top: 50px;
  left: 50px;
}
.back-div {
  background-color: red;
  z-index: 1;
}
.front-div {
  background-color: blue;
  z-index: 2;
}
/* 9 .Add scrollbars to a div if content overflows */
.scrollable-div {
  width: 200px;
  height: 100px;
  overflow: auto;
  border: 1px solid #000;
}
/* 10 . Float an image to the left of text */
.img2 {
  float: left;
  margin-right: 10px;
  width: 100px;
}
/* 10 .Align boxes horizontally using inline-block */
.inline-box {
  display: inline-block;
  width: 150px;
  height: 150px;
  margin: 10px;
  background-color: lightgreen;
}
/* 11 .Center text in a div */
.centre-text {
  text-align: center;
  padding: 20px;
  background-color: lightcoral;
}
/* 12 .Center a div using Flexbox */
.div-container {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 200px;
  background-color: lightgray;
}
.center-box {
  width: 100px;
  height: 100px;
  background-color: orangered;
}
/* 13 .Style all direct child <p> elements */
.parent > p {
  color: darkblue;
}
/* 14 .Style adjacent sibling element */
h1 + p {
  color: green;
}
/* 15 .Change color on hover */
.color-change:hover {
  color: red;
}

/* 16 . Style first child in list */
li:first-child {
  color: rgb(141, 9, 9);
}
/* 17 .Insert text before an element */
.text-change::before {
  content: "Note: ";
  color: rgb(253, 6, 6);
}
/* 18.Fade an image on hover */
.img-fade {
  height: 500px;
  width: 500px;
}
.img-fade:hover {
  opacity: 0.5;
  transition: opacity 0.5s ease-in-out;
}
/* 19 .Create a horizontal nav bar */
.navbar {
  display: flex;
  background-color: #333;
  padding: 5px;
  list-style-type: none;
}
.navbar a {
  color: white;
  padding: 14px 20px;
  text-decoration: none;
  display: block;
}
.navbar li {
  margin: 0;
}
/* 20 .Show dropdown content on hover */
.dropdown {
  position: relative;
  display: inline-block;
}
.drop-content {
  display: none;
  position: absolute;
  background-color: #f9f9f9;
  min-width: 160px;
  z-index: 1;
}
.dropdown:hover .drop-content {
  display: block;
}
/* 21 .Use background-position for sprite icons*/
.si {
  width: 80px;
  height: 50px;
  position: absolute;
  top: 100px;
  right: 0;
  background-image: url("img.jpg");
}

.ai {
  width: 80px;
  height: 50px;
  position: absolute;
  top: 180px;
  right: 0;
  background-image: url("img2.jpg");
}

.di {
  width: 80px;
  height: 50px;
  position: absolute;
  top: 260px;
  right: 0;
  background-image: url("img4.png");
}
/*22 . Use background-position for sprite icons */
.si {
  background-position: 0 0;
}
.ai {
  background-position: -80px 0;
}
.di {
  background-position: -160px 0;
}
/* 23 .Style input fields of type email */
input[type="email"] {
  width: 200px;
  padding: 10px;
  border: 1px solid black;
  border-radius: 5px;
}
/* 24 .Style a form with spacing and borders */
.style-form {
  width: 300px;
  padding: 20px;
  border: 1px solid black;
  border-radius: 10px;
}

/* 25 .Create a numbered list using counters */
.counter-div {
  counter-reset: number-count;
}

.counter-div h5::before {
  counter-increment: number-count;
  content: "part " counter(number-count) ": ";
}

/* 26 .Build a 3-column layout with Flexbox */
.flex-container {
  display: flex;
  background-color: blue;
}

.flex-container > div {
  background-color: white;
  margin: 10px;
  padding: 20px;
}
/* 27 .Use rem and % in layout */
.rem-box {
  width: 10rem;
  height: 10rem;
  background-color: lightseagreen;
}
.perce-box {
  width: 50%;
  height: 50%;
  background-color: lightcoral;
}
/* 29 .Create a web page with one paragraph. Add three conflicting CSS rules using element selector */
/* using class */
p {
  color: blue; /*specificity: 0-1-0 */
}
.para {
  color: red; /*specificity: 1-0-0  */
}
#para {
  color: green; /*specificity: 0-0-1  */
}
/* using id */
.paragraph {
  color: black; /*specificity: 0-1 */
}
#paragraph {
  color: purple; /*specificity: 1-0 */
}

/* id has the highest specificity compare to  class name,and in id "#idname" take the highest specificity*/

/* 30 .Force a style using !important */
p {
  color: blue !important;
}

/* 31 .Use calc() to adjust width */
p {
  width: calc(50% - 30px);
}
/* 32 .Use clamp() for responsive font size */
p {
  font-size: clamp(1rem, 2vw + 1rem, 3rem);
}
